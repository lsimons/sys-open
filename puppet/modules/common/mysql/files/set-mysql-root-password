#!/usr/bin/env bash

# FIXME: must be a nicer way
CHECK='mysqladmin --user=root --password="" status >/dev/null 2>&1'

HOME=/root
export HOME

trace() {
  echo "[set-mysql-root-password] $@"
  logger -t set-mysql-root-password $@
}

fail() {
  trace "ERROR: $1 ($?)" 
  exit 1
}                      

login_with_pass() {
  mysqladmin --user=root --password=$1 status >/dev/null 2>&1
}

login_with_my_cnf() {
  mysqladmin --user=root status >/dev/null 2>&1
}

trap fail ERR

# try logging into mysql as root without a password
# if we can, we need to set a password
if login_with_pass # null arg
then
  trace "password not set"

  touch /root/.my.cnf
  chmod 600 /root/.my.cnf
  chown root:root /root/.my.cnf
  PASS=$( dd if=/dev/random bs=32 count=1 2>/dev/null | sha256sum | awk '{ printf("%s", substr($1,0,12)); }' ) # FIXME: eww

  mysqladmin password ${PASS}
  cat >> /root/.my.cnf << _eof_
[client]
password = ${PASS}
_eof_
  cat >> /etc/motd << _eof_

NOTICE: random MySQL root password set and placed in ~root/.my.cnf
        Please store in KeePass and remove this message from /etc/motd

_eof_
  
  if login_with_pass # null arg
  then
    fail "set a root password but it passwordless login still works"
  elsif [ login_with_pass ${PASS} ]
    trace "SUCCESS: root password set, works explicitly"
  fi

  trace "root password now set"

else # passwordless login didn't work
  trace "root password already set"
fi

# check .my.cnf works
if login_with_my_cnf 
then
  trace "root password works via .my.cnf"
else
  fail "root password doesn't work via .my.cnf"
fi
