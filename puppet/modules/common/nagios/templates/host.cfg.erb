#PUPPET
# Autogenerated by hosts.rb using host.cfg.erb on the puppetmaster.
<% 
"""
  This template is called from the nagios::hosts class.
  nagios::hosts is located in nagios/manifests/hosts.rb, which is a hack of a
  ruby script that utilizes the ENC. 
 
  The class 'nagios::hosts' is run ON THE PUPPETMASTER!.
  It creates all $fqdn.cfg files in that are later to be pushed to
  monitorhost:/etc/nagios3/conf.d/
 
  In order to know what to include in each $host.cfg, we need info from the
  ENC. 

  These arrays/variables are added to the scope by node.rb (nagios::hosts):
    - host_classes
    - host_parameters
    - host
"""
 %>

# I am <%= host %>
#My master is: <%= masterserver %>
#My env is: <%= env %>

<%
hostgroups = []

# Each hostgroup you add here MUST ALSO BE ADDED TO hostgroups.cfg.erb!

# munin client (those should be all hosts actually...)
if host_classes.include?('munin::client')
 hostgroups.push("munin")
end

# puppetmaster
if host_classes.include?('puppetmaster')
  hostgroups.push("puppetmaster")
end

# apache
if host_classes.include?('apache')
  if host_params['apache']['http_active'] == 1
    hostgroups.push("http")
  end
  if host_params['apache']['http_alt_active'] == 1
    hostgroups.push("httpalt")
  end
  if host_params['apache']['https_active'] == 1
    hostgroups.push("https")
  end
end

# Yes we can also use parameters derived by the ENC for this host!
if host_params['profile'] == 'smarthost'
  hostgroups.push("mailhost")
  hostgroups.push("management")
end

if host_params['profile'] == 'loghost'
  hostgroups.push("loghost")
  hostgroups.push("management")
end

if host_params['profile'] == 'manage'
  hostgroups.push("management")
end

hostgroups_str = hostgroups.join(",")
%>

# This will actually define the host.
define host {
  alias                          <%= host %>
  address                        <%= host %>
  use                            <%= nagios['host_use'] %>
  host_name                      <%= host %>
  hostgroups                     stuff, <%= hostgroups_str %>
}
